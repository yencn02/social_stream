var relations;

function checkBoxId(id) {
  return id.match(/\d+$/)[0];
}

function checkBoxType(id) {
  return id.match(/(.*)_\d+$/)[1]
}

function checkBoxValue(id) {
  return $('label[for$=' + id +']').html(); 
}

function checkBoxOrder(id) {
  return parseInt($('label[for$=' + id +']').attr("order"));
}

function checkBoxIdByOrder(order) {
  return $('label[order$=' + order +']').attr("for");
}


function checkBoxEnable(id) {
	$('div[contain$='+id+']').addClass("checked-option");

        switch (checkBoxType(id)) {

	case "sphere":
		$(':checkbox[id^="sphere"]:checked:not(#' + id + ')').checkBox('changeCheckStatus', false);

		var sphereSelected = checkBoxId(id);

		$.ajax({
			url: "<%= relation_customs_path %>",
			context: document.body,
			data: { sphere_id: sphereSelected },
                        dataType: "script"
		});

                break;

	case "relation_custom":
		$(':checkbox[id^="relation_custom"]:checked:not(#' + id + ')').checkBox('changeCheckStatus', false);

                var value = relations.length - checkBoxOrder(id) - 2;
		$("#slider-range").slider("value", value);

		$( "#relation" ).val(checkBoxValue(id));

		$.ajax({
			url: "<%= permissions_path %>",
			context: document.body,
			data: { relation_id: checkBoxId(id) },
                        dataType: "script"
		});

                break;

	case "permission":
                showPermission('relation_custom_permission_ids_' + checkBoxId(id));

                break;

        default:
          alert("Unknown type of checkBox: " + checkBoxType(id));
        }
}

function checkBoxDisable(id) {
	$('div[contain$='+id+']').removeClass("checked-option");

        switch (checkBoxType(id)) {

	case "sphere":
                $("#permissions").html("");
		$("#permissions").hide();
		$("#relations").hide();

                break;

	case "relation_custom":
                $("#permissions").html("");
		$("#permissions").hide();

		$("#slider-range").slider("value", relations.length - 1);
	        
                break;

	case "permission":
                hidePermission('relation_custom_permission_ids_' + checkBoxId(id));

                break;
        default:
          alert("Unknown type of checkBox: " + checkBoxType(id));

        }
} 


function initSlider() {
  /* TODO: get relations from checkboxOptions */
  relations.unshift("<%= t 'relation_public.name' %>");
  relations.push("<%= current_subject.name %>");

  $("#relation").val(relations[relations.length - 1]);

  $("#slider-range").slider({
    orientation: "vertical",
    range: "min",
    min: 0,
    max: relations.length - 1,
    step: 1,
    value: relations.length - 1,
    slide: function(event, ui) {
      $('#relation').val(relations[ui.value]);
      },
    stop: function(event, ui) {
      var order = relations.length - ui.value - 2;
      if (order >= 0 && order < relations.length - 2) {
        var id = '#' + checkBoxIdByOrder(order);
        $(id).checkBox('changeCheckStatus', true);
      } else {
        $(':checkbox[id^="relation_custom"]:checked').checkBox('changeCheckStatus', false);
      }
    }
  });
};

function showPermission(id) {
  $('label[for="' + id + '"]').parent().show();
}

function hidePermission(id) {
  $('label[for="' + id + '"]').parent().hide();
}

function initPrivacyRules() {
  $('#relation_custom_permissions_input input').each(
    function() {
      if ($(this).attr('checked')) {
        $(':checkbox[id="permission_' + $(this).attr('value') + '"]').checkBox('changeCheckStatus', true);

      } else {
        hidePermission($(this).attr("id"));
      }
    }
  );
}
